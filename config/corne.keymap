/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Personal includes
#include "includes/settings.dtsi"
//#include "includes/settings_pd.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"

#include "../zmk-nodefree-config/helper.h"

#define DEFAULT 0
#define SYMBOL  1
#define NUMPAD  2
#define NAV     3
#define GAMING  4
#define MEDIA   5

// Q and A combo to hit ESC
/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <75>;
            key-positions = <1 13>;
            bindings = <&kp ESC>;
        };
    };
};

// How long you have to press and release to use the key and not the modifier.
&mt {
    tapping-term-ms = <200>;
};

&lt {
    tapping-term-ms = <200>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |       |   Q   |   W   |   F   |  P   |  B  |                                      |  J  |  L   |   U  |  Y  |  ;  |      |
// |       |   A   |   R   |   S   |  T   | G*L3|                                      |  M  |  N   |   E  |  I  |  O  |      |
// |       | Z*CTRL| X*ALT | C*CTRL|D*SHFT|  V  |                                      |  K  |H*SHFT|,*CTRL|.*ALT|  /  |      |
//                                 |ESC*L2| SPC |TAB*L1|                        |ENT*L3| BSPC|DEL*L5|
                        bindings = <
   &none   &kp Q        &kp W        &kp F         &kp P         &kp B              &kp J      &kp L         &kp U         &kp Y        &kp SEMI     &none
   &none   &hm_l LGUI A &hm_l LALT R &hm_l LCTRL S &hm_l LSHFT T &kp G              &kp M      &hm_l RSHFT N &hm_l RCTRL E &hm_l RALT I &hm_l RGUI O &none
   &none   &lt 3 Z      &kp X        &kp C         &kp D         &kp V              &kp K      &kp H         &kp COMMA     &kp DOT      &lt 3 FSLH   &none
                                     &lt 5 ESC     &kp SPACE     &lt 1 TAB          &lt 2 RET &kp BSPC &lt 5 DEL
                        >;
                };
                
                symbol_layer {
// -----------------------------------------------------------------------------------------
// |       |  !  |  @  |  #  |  $  |  %  |                                           | /?  |  {  |  }  |  \  |     |      |
// |       |  ^  |  &  |  *  | ,<  | .>  |                                           | '"  |  (  |  )  |  _  |  =  |      |
// |       |  `  | ALT | CTRL| SHFT|     |                                           |  "  |  [  |  ]  |  -  |     |      |
//                           | ESC |SPACE|TRANS|                               | ENT |BSPC | DEL |
                        bindings = <
   &none  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT                       &kp GRAVE &kp LBRC &kp RBRC &kp NUBS  &trans    &none
   &none  &kp LGUI  &kp LALT &kp LCTRL &kp LSHFT &none                           &kp APOS  &kp LPAR &kp RPAR &kp UNDER &kp EQUAL &none
   &none  &kp CARET &kp AMPS &kp STAR  &kp COMMA &kp DOT                         &kp DQT   &kp LBKT &kp RBKT &kp MINUS &trans    &none
                                       &kp ESC   &kp SPACE &trans      &kp RET   &kp BSPC &kp DEL
                        >;
                };

                numpad_layer {
// -----------------------------------------------------------------------------------------
// |      |numlck|     |     |     |     |                                              |  /  |  #7 |  #8 |  #9 |  *  |      |
// |      |      |     |     |     |     |                                              |  -  |  #4 |  #5 |  #6 |  +  |      |
// |      |      | ALT |CTRL |SHFT | L4  |                                              |  =  |  #1 |  #2 |  #3 |  .  |      |
//                           |TRANS|SPACE|  =  |                                  | ENT |BSPC |  #0 |
                        bindings = <
   &none &kp SLASH &kp N7 &kp N8 &kp N9    &kp KP_MULTIPLY                     &none    &none     &none     &none    &none    &none
   &none &kp MINUS &kp N4 &kp N5 &kp N6    &kp KP_PLUS                         &none    &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &none
   &none &kp EQUAL &kp N1 &kp N2 &kp N3    &kp DOT                             &none    &none     &none     &none    &none    &none
                                 &kp UNDER &kp N0     &kp RET           &trans &kp BSPC &kp DEL
                        >;
                };
                
                nav_layer {
// -----------------------------------------------------------------------------------------
// |      | CTRL|     |  UP  |     |  Y  |                           |  Y  |     |  UP |     | CTRL|     |
// |      | SHFT| LEFT| DOWN |RIGHT|TRANS|                           |     |LEFT |DOWN |RIGHT| SHFT|     |
// |      |  Z  |  X  |   C  |  Y  |  V  |                           |  V  |  Y  |  C  |  X  |  Z  |     |
//                           | ESC |SPACE| CTRL|               |TRANS| BSPC| ENT |
                        bindings = <
   &none &none  &kp PG_DN &kp UP    &kp PG_UP &none                                  &none    &kp PG_UP &kp UP    &kp PG_DN &none  &none
   &none &none  &kp LEFT  &kp DOWN  &kp RIGHT &none                                  &none    &kp LEFT  &kp DOWN  &kp RIGHT &none  &none
   &none &trans &kp LALT  &kp LCTRL &kp LSHFT &kp LGUI                               &kp LGUI &kp LSHFT &kp LCTRL &kp LALT  &trans &none
                                    &kp ESC   &kp SPACE &kp LCTRL            &kp RET &kp BSPC &kp DEL
                        >;
                };
                
                gaming_layer {
// -----------------------------------------------------------------------------------------
// |      | Tab  |  Q  |  W  |  E  |  R  |                          |  I  |      | UP  |     |     |      |
// |      | SHFT |  A  |  S  |  D  |  F  |                          |  M  | LEFT |DOWN |RIGHT|     |      |
// |      | CTRL |  Z  |  X  |  C  |  V  |                          |  P  |      |     |     |     |      |
//                           | ESC | SPC | TAB |              | L0  |     |      |
                        bindings = <
   &none &kp TAB   &kp Q &kp W &kp E   &kp R                          &kp I &none    &kp UP   &none     &none &none
   &none &kp LSHFT &kp A &kp S &kp D   &kp F                          &kp M &kp LEFT &kp DOWN &kp RIGHT &none &none
   &none &kp LCTRL &kp Z &kp X &kp C   &kp V                          &kp P &none    &none    &none     &none &none
                               &kp ESC &kp SPACE &kp TAB        &to 0 &none &none
                        >;
                };
                
                media_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |                                          |     |     |     |     |BTCLR|      |
// |      | MUTE|     |VOLDN|VOLUP|     |                                          | BT0 | BT1 | BT2 | BT3 | BT4 |      |
// |      |     |     |     |     |     |                                          |     |     |     |     |     |      |
//                          |STOP | P/P |SKIP|                               |     |     |TRANS|
                        bindings = <
   &none &none      &none        &none      &none        &none                               &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
   &none &kp K_PREV &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &kp K_NEXT                          &kp K_PREV   &kp C_VOL_DN &kp C_MUTE   &kp C_VOL_UP &kp K_NEXT   &none
   &none &none      &none        &kp C_PP   &none        &none                               &none        &none        &none        &none        &bt BT_CLR   &none
                                            &trans       &kp C_PP &kp C_PAUSE    &kp C_PAUSE &kp C_PP     &kp C_STOP
                        >;
                };
        };
};

